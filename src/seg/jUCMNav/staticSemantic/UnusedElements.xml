<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<Rules>
	<Rule>
		<Name>GRLgraphEmpty</Name>
		<Description>GRL graph is empty</Description>
		<Classification>grl::GRLGraph</Classification>
		<Query>getAllGRLGraphs()</Query>
		<Constraint>(self.nodes-&gt;size() > 0) or
(self.contRefs-&gt;size() > 0) or
(self.connections-&gt;size() > 0)</Constraint>
		<Utilities />
		<WarningOnly>true</WarningOnly>
	</Rule>
	<Rule>
		<Name>GRLactorEmpty</Name>
		<Description>GRL actor is empty</Description>
		<Classification>grl::ActorRef</Classification>
		<Query>getAllActorRefs()</Query>
		<Constraint>let allRefs:Sequence(grl::ActorRef) = 
	self.contDef.contRefs
	-&gt; select(r|r.oclIsTypeOf(grl::ActorRef))
	-&gt; collect(r|r.oclAsType(grl::ActorRef))
	-&gt; asSequence()
in
	(allRefs -&gt; collect (e|e.nodes-&gt;size())-&gt;sum() > 0) or
	(allRefs -&gt; collect (e|e.children-&gt;size())-&gt;sum() > 0)</Constraint>
		<Utilities />
		<WarningOnly>true</WarningOnly>
	</Rule>
	<Rule>
		<Name>GRLactorWithoutRef</Name>
		<Description>GRL actor definition without any reference</Description>
		<Classification>grl::Actor</Classification>
		<Query>getAllActors()</Query>
		<Constraint>self.contRefs-&gt;size()&gt;0</Constraint>
		<Utilities />
		<WarningOnly>true</WarningOnly>
	</Rule>
	<Rule>
		<Name>GRLintentionalElemWithoutRef</Name>
		<Description>GRL intentional element definition without any reference</Description>
		<Classification>grl::IntentionalElement</Classification>
		<Query>getAllIntentionalElementsWithIndicators()</Query>
		<Constraint>self.refs-&gt;size()&gt;0</Constraint>
		<Utilities />
		<WarningOnly>true</WarningOnly>
	</Rule>
	<Rule>
		<Name>GRLintentionalLinkWithoutRef</Name>
		<Description>GRL intentional link definition without any reference</Description>
		<Classification>grl::ElementLink</Classification>
		<Query>getAllElementLinks()</Query>
		<Constraint>self.refs-&gt;size()&gt;0</Constraint>
		<Utilities />
		<WarningOnly>true</WarningOnly>
	</Rule>
	<Rule>
		<Name>UCMmapEmpty</Name>
		<Description>UCM map is empty</Description>
		<Classification>ucm::map::UCMmap</Classification>
		<Query>getAllUCMmaps()</Query>
		<Constraint>(self.nodes-&gt;size() > 0) or
(self.contRefs-&gt;size() > 0) or
(self.connections-&gt;size() > 0)</Constraint>
		<Utilities />
		<WarningOnly>true</WarningOnly>
	</Rule>
	<Rule>
		<Name>UCMcomponentEmpty</Name>
		<Description>UCM component is empty</Description>
		<Classification>ucm::map::ComponentRef</Classification>
		<Query>getAllComponentRefs()</Query>
		<Constraint>let allRefs:Sequence(ucm::map::ComponentRef) = 
	self.contDef.contRefs
	-&gt; select(r|r.oclIsTypeOf(ucm::map::ComponentRef))
	-&gt; collect(r|r.oclAsType(ucm::map::ComponentRef))
	-&gt; asSequence()
in
	(allRefs -&gt; collect (e|e.nodes-&gt;size())-&gt;sum() > 0) or
	(allRefs -&gt; collect (e|e.children-&gt;size())-&gt;sum() > 0)</Constraint>
		<Utilities />
		<WarningOnly>true</WarningOnly>
	</Rule>
	<Rule>
		<Name>UCMcomponentWithoutRef</Name>
		<Description>UCM component definition without any reference</Description>
		<Classification>urncore::Component</Classification>
		<Query>getAllComponents()</Query>
		<Constraint>self.contRefs-&gt;size()&gt;0</Constraint>
		<Utilities />
		<WarningOnly>true</WarningOnly>
	</Rule>
	<Rule>
		<Name>UCMresponsibilityWithoutRef</Name>
		<Description>UCM responsibility definition without any reference</Description>
		<Classification>urncore::Responsibility</Classification>
		<Query>getAllResponsibilities()</Query>
		<Constraint>self.respRefs-&gt;size()&gt;0</Constraint>
		<Utilities />
		<WarningOnly>true</WarningOnly>
	</Rule>
	<Rule>
		<Name>UCMstubEmpty</Name>
		<Description>UCM stub has no plug-in map</Description>
		<Classification>ucm::map::Stub</Classification>
		<Query>getAllStubs()</Query>
		<Constraint>self.getPluginsForStub()-&gt;size()&gt;0</Constraint>
		<Utilities />
		<WarningOnly>false</WarningOnly>
	</Rule>
	<Rule>
		<Name>UCMscenarioCoverage</Name>
		<Description>UCM path node not covered by the scenario(s) executed</Description>
		<Classification>ucm::map::PathNode</Classification>
		<Query>getAllPathNodes()</Query>
		<Constraint>getMetadata('_hits') &lt;&gt; '' implies getMetadata('_hits').toInteger() &gt; 0</Constraint>
		<Utilities />
		<WarningOnly>true</WarningOnly>
	</Rule>
</Rules>

