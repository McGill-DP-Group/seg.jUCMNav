/* Generated By:JJTree: Do not edit this line. jUCMNavParserTreeConstants.java */

package seg.jUCMNav.scenarios.parser;

public interface jUCMNavParserTreeConstants {
    public int JJTSTART = 0;
    public int JJTSTARTRESPONSIBILITY = 1;
    public int JJTVOID = 2;
    public int JJTASSIGNMENT = 3;
    public int JJTCOMPOUNDSTATEMENT = 4;
    public int JJTIFSTATEMENT = 5;
    public int JJTIMPLICATION = 6;
    public int JJTDISJUNCTION = 7;
    public int JJTINCLUSIVEDISJUNCTION = 8;
    public int JJTEXCLUSIVEDISJUNCTION = 9;
    public int JJTCONJUNCTION = 10;
    public int JJTCOMPARISON = 11;
    public int JJTEQUALITY = 12;
    public int JJTINEQUALITY = 13;
    public int JJTNEGATION = 14;
    public int JJTRELATIONALEXPRESSION = 15;
    public int JJTRELATIONALOPERATION = 16;
    public int JJTADDITIVEEXPRESSION = 17;
    public int JJTMULTIPLICATIVEEXPRESSION = 18;
    public int JJTGREATERTHAN = 19;
    public int JJTGREATEROREQUALTO = 20;
    public int JJTLOWERTHAN = 21;
    public int JJTLOWEROREQUALTO = 22;
    public int JJTADDITION = 23;
    public int JJTSUBSTRACTION = 24;
    public int JJTMULTIPLICATION = 25;
    public int JJTBOOLEANCONSTANT = 26;
    public int JJTINTEGERCONSTANT = 27;
    public int JJTIDENTIFIER = 28;

    public String[] jjtNodeName = { "Start", //$NON-NLS-1$
            "StartResponsibility", //$NON-NLS-1$
            "void", //$NON-NLS-1$
            "Assignment", //$NON-NLS-1$
            "CompoundStatement", //$NON-NLS-1$
            "IfStatement", //$NON-NLS-1$
            "Implication", //$NON-NLS-1$
            "Disjunction", //$NON-NLS-1$
            "InclusiveDisjunction", //$NON-NLS-1$
            "ExclusiveDisjunction", //$NON-NLS-1$
            "Conjunction", //$NON-NLS-1$
            "Comparison", //$NON-NLS-1$
            "Equality", //$NON-NLS-1$
            "Inequality", //$NON-NLS-1$
            "Negation", //$NON-NLS-1$
            "RelationalExpression", //$NON-NLS-1$
            "RelationalOperation", //$NON-NLS-1$
            "AdditiveExpression", //$NON-NLS-1$
            "MultiplicativeExpression", //$NON-NLS-1$
            "GreaterThan", //$NON-NLS-1$
            "GreaterOrEqualTo", //$NON-NLS-1$
            "LowerThan", //$NON-NLS-1$
            "LowerOrEqualTo", //$NON-NLS-1$
            "Addition", //$NON-NLS-1$
            "Substraction", //$NON-NLS-1$
            "Multiplication", //$NON-NLS-1$
            "BooleanConstant", //$NON-NLS-1$
            "IntegerConstant", //$NON-NLS-1$
            "Identifier", //$NON-NLS-1$
    };
}
